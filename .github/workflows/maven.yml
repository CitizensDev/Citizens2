# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: phoenixdevt-releases
    - name: Install depends
      run: mvn install
    - name: Build with Maven
      run: mvn package
    - run: mkdir staging && cp target/*.jar staging
#     - name: Set Release version env variable
#       run: |
#         echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
#     - name: "Build & test"
#       run: |
#         echo "done!"
#     - uses: "marvinpinto/action-automatic-releases@latest"
#       with:
#         repo_token: "${{ secrets.GITHUB_TOKEN }}"
#         automatic_release_tag: "${{ env.RELEASE_VERSION }}"
#         prerelease: false
#         title: "Release ${{ env.RELEASE_VERSION }}"
#         files: |
#           staging/*.jar
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Citizens
        path: staging/*.jar
